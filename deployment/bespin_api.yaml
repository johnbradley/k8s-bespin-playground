---
kind: Template
apiVersion: v1
metadata:
  name: bespin-api

parameters:
- name: BESPIN_API_SERVICE_NAME
  displayName: Database Service Name
  required: true
  value: bespin-api
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  required: true
  value: bespin-db
- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  required: true
  description: The URL of the repository with your application source code.
  value: https://github.com/johnbradley/bespin-api.git
- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  value: 'k8s-testing'
- name: CONTEXT_DIR
  displayName: Context Directory
  description: Set this to the relative path to your project if it is not in the root
    of your repository.
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the Django service, if left
    blank a value will be defaulted.
  value: ''
- name: GITHUB_WEBHOOK_SECRET
  displayName: GitHub Webhook Secret
  description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  generate: expression
  from: "[a-zA-Z0-9]{40}"

- name: APP_CONFIG
  displayName: Application Configuration File Path
  description: Relative path to Gunicorn configuration file (optional).

- name: BESPIN_API_SECRET_KEY
  displayName: Django Secret Key
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: BESPIN_API_MAILER_TOKEN
  displayName: bespin-api-mailer-token
  description: Token to use with bespin api
  value: ''
- name: PIP_INDEX_URL
  displayName: Custom PyPi Index URL
  description: The custom PyPi index URL
  value: ''
- name: DJANGO_SETTINGS_MODULE
  displayName: DJANGO_SETTINGS_MODULE environment variable
  description: which django settings we will use
  value: bespin.settings_prod

- name: BESPIN_API_ALLOWED_HOST
  displayName: bespin-api-allowed-host
  description: Host that can access the API
  value: "*"

- name: IMAGE_STREAM_NAMESPACE
  displayName: Namespace
  required: true
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
- name: MEMORY_LIMIT
  displayName: Memory Limit
  required: true
  description: Maximum amount of memory the Django container can use.
  value: 512Mi
- name: PYTHON_VERSION
  displayName: Version of Python Image
  description: Version of Python image to be used (3.6 or latest).
  value: '3.6'
  required: true

objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: "${BESPIN_API_SERVICE_NAME}"
  stringData:
    secretkey: "${BESPIN_API_SECRET_KEY}"
    mailertoken: "${BESPIN_API_MAILER_TOKEN}"

- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "${BESPIN_API_SERVICE_NAME}"
  data:
    allowed_host: "${BESPIN_API_ALLOWED_HOST}"
    django_settings_module: "${DJANGO_SETTINGS_MODULE}"

- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: bespin-service-account

- kind: RoleBinding
  apiVersion: rbac.authorization.k8s.io/v1
  metadata:
    name: bespin-service-account
    namespace: metadata.namespace
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - kind: ServiceAccount
    apiVersion: v1
    name: bespin-service-account
    namespace: metadata.namespace

- kind: Service
  apiVersion: v1
  metadata:
    name: "${BESPIN_API_SERVICE_NAME}"
    annotations:
      description: Exposes and load balances the application pods

  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: "${BESPIN_API_SERVICE_NAME}"

- kind: Route
  apiVersion: v1
  metadata:
    name: "${BESPIN_API_SERVICE_NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    to:
      kind: Service
      name: "${BESPIN_API_SERVICE_NAME}"

- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${BESPIN_API_SERVICE_NAME}"
    annotations:
      description: Keeps track of changes in the application image

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${BESPIN_API_SERVICE_NAME}"
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: "${CONTEXT_DIR}"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_STREAM_NAMESPACE}"
          name: python:${PYTHON_VERSION}
        env:
        - name: PIP_INDEX_URL
          value: "${PIP_INDEX_URL}"
    output:
      to:
        kind: ImageStreamTag
        name: "${BESPIN_API_SERVICE_NAME}:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - type: GitHub
      github:
        secret: "${GITHUB_WEBHOOK_SECRET}"

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${BESPIN_API_SERVICE_NAME}"
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - bespin-api
        from:
          kind: ImageStreamTag
          name: "${BESPIN_API_SERVICE_NAME}:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${BESPIN_API_SERVICE_NAME}"
    template:
      metadata:
        name: "${BESPIN_API_SERVICE_NAME}"
        labels:
          name: "${BESPIN_API_SERVICE_NAME}"
      spec:
        serviceAccount: bespin-service-account
        containers:
        - name: bespin-api
          image: " "
          ports:
          - containerPort: 8080
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DJANGO_SETTINGS_MODULE
            valueFrom:
              configMapKeyRef:
                name: bespin-api
                key: django_settings_module
          - name: BESPIN_DB_HOST
            value: "${DATABASE_SERVICE_NAME}"
          - name: BESPIN_DB_NAME
            valueFrom:
              secretKeyRef:
                name: "${DATABASE_SERVICE_NAME}"
                key: name
          - name: BESPIN_DB_USER
            valueFrom:
              secretKeyRef:
                name: "${DATABASE_SERVICE_NAME}"
                key: user
          - name: BESPIN_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${DATABASE_SERVICE_NAME}"
                key: password
          - name: APP_CONFIG
            value: "${APP_CONFIG}"
          - name: BESPIN_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: "${BESPIN_API_SERVICE_NAME}"
                key: secretkey
          - name: BESPIN_ALLOWED_HOST
            valueFrom:
              configMapKeyRef:
                name: "${BESPIN_API_SERVICE_NAME}"
                key: allowed_host
          - name: APP_MODULE
            value: "bespin.wsgi:application"
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: "/api"
              port: 8080
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            httpGet:
              path: "/api"
              port: 8080
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
